{"ast":null,"code":"var _jsxFileName = \"D:\\\\Java F.S\\\\medicine-reminder\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Heading, Input, Button, VStack, HStack, Text, useToast, Container, StackDivider, IconButton } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { getReminders, addReminder, deleteReminder } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [form, setForm] = useState({\n    medicineName: '',\n    dosageTime: '',\n    frequency: ''\n  });\n  const [reminders, setReminders] = useState([]);\n  const toast = useToast();\n  useEffect(() => {\n    fetchReminders();\n  }, []);\n  const fetchReminders = async () => {\n    const res = await getReminders();\n    setReminders(res.data);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!form.medicineName || !form.dosageTime || !form.frequency) return;\n    await addReminder(form);\n    toast({\n      title: 'Reminder added.',\n      status: 'success',\n      duration: 2000,\n      isClosable: true\n    });\n    setForm({\n      medicineName: '',\n      dosageTime: '',\n      frequency: ''\n    });\n    fetchReminders();\n  };\n  const handleDelete = async id => {\n    await deleteReminder(id);\n    toast({\n      title: 'Reminder deleted.',\n      status: 'info',\n      duration: 2000,\n      isClosable: true\n    });\n    fetchReminders();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"lg\",\n    py: 10,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      mb: 6,\n      color: \"teal.500\",\n      children: \"\\uD83D\\uDC8A Medicine Reminder App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      as: \"form\",\n      spacing: 4,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Medicine Name\",\n        value: form.medicineName,\n        onChange: e => setForm({\n          ...form,\n          medicineName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Dosage Time (e.g. 8:00 AM)\",\n        value: form.dosageTime,\n        onChange: e => setForm({\n          ...form,\n          dosageTime: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Frequency (e.g. Daily)\",\n        value: form.frequency,\n        onChange: e => setForm({\n          ...form,\n          frequency: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"teal\",\n        type: \"submit\",\n        width: \"100%\",\n        children: \"\\u2795 Add Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 10,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"md\",\n        mb: 4,\n        children: \"Your Reminders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 20\n        }, this),\n        spacing: 4,\n        align: \"stretch\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        p: 4,\n        bg: \"gray.50\",\n        children: reminders.length === 0 ? /*#__PURE__*/_jsxDEV(Text, {\n          color: \"gray.500\",\n          textAlign: \"center\",\n          children: \"No reminders yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this) : reminders.map(reminder => /*#__PURE__*/_jsxDEV(HStack, {\n          justify: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"bold\",\n              children: reminder.medicineName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"sm\",\n              color: \"gray.600\",\n              children: [reminder.dosageTime, \" \\u2014 \", reminder.frequency]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this),\n            colorScheme: \"red\",\n            size: \"sm\",\n            onClick: () => handleDelete(reminder.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, reminder.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mZkVCb7ToN6g/9qtxsYot0GT5gI=\", false, function () {\n  return [useToast];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Box","Heading","Input","Button","VStack","HStack","Text","useToast","Container","StackDivider","IconButton","DeleteIcon","getReminders","addReminder","deleteReminder","jsxDEV","_jsxDEV","App","_s","form","setForm","medicineName","dosageTime","frequency","reminders","setReminders","toast","fetchReminders","res","data","handleSubmit","e","preventDefault","title","status","duration","isClosable","handleDelete","id","maxW","py","children","textAlign","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","as","spacing","onSubmit","placeholder","value","onChange","target","colorScheme","type","width","mt","size","divider","align","borderWidth","borderRadius","p","bg","length","map","reminder","justify","fontWeight","fontSize","icon","onClick","_c","$RefreshReg$"],"sources":["D:/Java F.S/medicine-reminder/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Heading,\n  Input,\n  Button,\n  VStack,\n  HStack,\n  Text,\n  useToast,\n  Container,\n  StackDivider,\n  IconButton\n} from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { getReminders, addReminder, deleteReminder } from './services/api';\n\nfunction App() {\n  const [form, setForm] = useState({\n    medicineName: '',\n    dosageTime: '',\n    frequency: ''\n  });\n\n  const [reminders, setReminders] = useState([]);\n  const toast = useToast();\n\n  useEffect(() => {\n    fetchReminders();\n  }, []);\n\n  const fetchReminders = async () => {\n    const res = await getReminders();\n    setReminders(res.data);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!form.medicineName || !form.dosageTime || !form.frequency) return;\n\n    await addReminder(form);\n    toast({\n      title: 'Reminder added.',\n      status: 'success',\n      duration: 2000,\n      isClosable: true\n    });\n    setForm({ medicineName: '', dosageTime: '', frequency: '' });\n    fetchReminders();\n  };\n\n  const handleDelete = async (id) => {\n    await deleteReminder(id);\n    toast({\n      title: 'Reminder deleted.',\n      status: 'info',\n      duration: 2000,\n      isClosable: true\n    });\n    fetchReminders();\n  };\n\n  return (\n    <Container maxW=\"lg\" py={10}>\n      <Heading textAlign=\"center\" mb={6} color=\"teal.500\">\n        ðŸ’Š Medicine Reminder App\n      </Heading>\n\n      <VStack as=\"form\" spacing={4} onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Medicine Name\"\n          value={form.medicineName}\n          onChange={(e) => setForm({ ...form, medicineName: e.target.value })}\n        />\n        <Input\n          placeholder=\"Dosage Time (e.g. 8:00 AM)\"\n          value={form.dosageTime}\n          onChange={(e) => setForm({ ...form, dosageTime: e.target.value })}\n        />\n        <Input\n          placeholder=\"Frequency (e.g. Daily)\"\n          value={form.frequency}\n          onChange={(e) => setForm({ ...form, frequency: e.target.value })}\n        />\n        <Button colorScheme=\"teal\" type=\"submit\" width=\"100%\">\n          âž• Add Reminder\n        </Button>\n      </VStack>\n\n      <Box mt={10}>\n        <Heading as=\"h2\" size=\"md\" mb={4}>\n          Your Reminders\n        </Heading>\n        <VStack\n          divider={<StackDivider />}\n          spacing={4}\n          align=\"stretch\"\n          borderWidth={1}\n          borderRadius=\"lg\"\n          p={4}\n          bg=\"gray.50\"\n        >\n          {reminders.length === 0 ? (\n            <Text color=\"gray.500\" textAlign=\"center\">\n              No reminders yet.\n            </Text>\n          ) : (\n            reminders.map((reminder) => (\n              <HStack key={reminder.id} justify=\"space-between\">\n                <Box>\n                  <Text fontWeight=\"bold\">{reminder.medicineName}</Text>\n                  <Text fontSize=\"sm\" color=\"gray.600\">\n                    {reminder.dosageTime} â€” {reminder.frequency}\n                  </Text>\n                </Box>\n                <IconButton\n                  icon={<DeleteIcon />}\n                  colorScheme=\"red\"\n                  size=\"sm\"\n                  onClick={() => handleDelete(reminder.id)}\n                />\n              </HStack>\n            ))\n          )}\n        </VStack>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,OAAO,EACPC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,IAAI,EACJC,QAAQ,EACRC,SAAS,EACTC,YAAY,EACZC,UAAU,QACL,kBAAkB;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,YAAY,EAAEC,WAAW,EAAEC,cAAc,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC;IAC/BsB,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM2B,KAAK,GAAGnB,QAAQ,CAAC,CAAC;EAExBT,SAAS,CAAC,MAAM;IACd6B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,GAAG,GAAG,MAAMhB,YAAY,CAAC,CAAC;IAChCa,YAAY,CAACG,GAAG,CAACC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACb,IAAI,CAACE,YAAY,IAAI,CAACF,IAAI,CAACG,UAAU,IAAI,CAACH,IAAI,CAACI,SAAS,EAAE;IAE/D,MAAMV,WAAW,CAACM,IAAI,CAAC;IACvBO,KAAK,CAAC;MACJO,KAAK,EAAE,iBAAiB;MACxBC,MAAM,EAAE,SAAS;MACjBC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE;IACd,CAAC,CAAC;IACFhB,OAAO,CAAC;MAAEC,YAAY,EAAE,EAAE;MAAEC,UAAU,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAC,CAAC;IAC5DI,cAAc,CAAC,CAAC;EAClB,CAAC;EAED,MAAMU,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAMxB,cAAc,CAACwB,EAAE,CAAC;IACxBZ,KAAK,CAAC;MACJO,KAAK,EAAE,mBAAmB;MAC1BC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE;IACd,CAAC,CAAC;IACFT,cAAc,CAAC,CAAC;EAClB,CAAC;EAED,oBACEX,OAAA,CAACR,SAAS;IAAC+B,IAAI,EAAC,IAAI;IAACC,EAAE,EAAE,EAAG;IAAAC,QAAA,gBAC1BzB,OAAA,CAACf,OAAO;MAACyC,SAAS,EAAC,QAAQ;MAACC,EAAE,EAAE,CAAE;MAACC,KAAK,EAAC,UAAU;MAAAH,QAAA,EAAC;IAEpD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAEVhC,OAAA,CAACZ,MAAM;MAAC6C,EAAE,EAAC,MAAM;MAACC,OAAO,EAAE,CAAE;MAACC,QAAQ,EAAErB,YAAa;MAAAW,QAAA,gBACnDzB,OAAA,CAACd,KAAK;QACJkD,WAAW,EAAC,eAAe;QAC3BC,KAAK,EAAElC,IAAI,CAACE,YAAa;QACzBiC,QAAQ,EAAGvB,CAAC,IAAKX,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEE,YAAY,EAAEU,CAAC,CAACwB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACFhC,OAAA,CAACd,KAAK;QACJkD,WAAW,EAAC,4BAA4B;QACxCC,KAAK,EAAElC,IAAI,CAACG,UAAW;QACvBgC,QAAQ,EAAGvB,CAAC,IAAKX,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEG,UAAU,EAAES,CAAC,CAACwB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eACFhC,OAAA,CAACd,KAAK;QACJkD,WAAW,EAAC,wBAAwB;QACpCC,KAAK,EAAElC,IAAI,CAACI,SAAU;QACtB+B,QAAQ,EAAGvB,CAAC,IAAKX,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEI,SAAS,EAAEQ,CAAC,CAACwB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eACFhC,OAAA,CAACb,MAAM;QAACqD,WAAW,EAAC,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC,MAAM;QAAAjB,QAAA,EAAC;MAEtD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEThC,OAAA,CAAChB,GAAG;MAAC2D,EAAE,EAAE,EAAG;MAAAlB,QAAA,gBACVzB,OAAA,CAACf,OAAO;QAACgD,EAAE,EAAC,IAAI;QAACW,IAAI,EAAC,IAAI;QAACjB,EAAE,EAAE,CAAE;QAAAF,QAAA,EAAC;MAElC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACVhC,OAAA,CAACZ,MAAM;QACLyD,OAAO,eAAE7C,OAAA,CAACP,YAAY;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAC1BE,OAAO,EAAE,CAAE;QACXY,KAAK,EAAC,SAAS;QACfC,WAAW,EAAE,CAAE;QACfC,YAAY,EAAC,IAAI;QACjBC,CAAC,EAAE,CAAE;QACLC,EAAE,EAAC,SAAS;QAAAzB,QAAA,EAEXjB,SAAS,CAAC2C,MAAM,KAAK,CAAC,gBACrBnD,OAAA,CAACV,IAAI;UAACsC,KAAK,EAAC,UAAU;UAACF,SAAS,EAAC,QAAQ;UAAAD,QAAA,EAAC;QAE1C;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAEPxB,SAAS,CAAC4C,GAAG,CAAEC,QAAQ,iBACrBrD,OAAA,CAACX,MAAM;UAAmBiE,OAAO,EAAC,eAAe;UAAA7B,QAAA,gBAC/CzB,OAAA,CAAChB,GAAG;YAAAyC,QAAA,gBACFzB,OAAA,CAACV,IAAI;cAACiE,UAAU,EAAC,MAAM;cAAA9B,QAAA,EAAE4B,QAAQ,CAAChD;YAAY;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACtDhC,OAAA,CAACV,IAAI;cAACkE,QAAQ,EAAC,IAAI;cAAC5B,KAAK,EAAC,UAAU;cAAAH,QAAA,GACjC4B,QAAQ,CAAC/C,UAAU,EAAC,UAAG,EAAC+C,QAAQ,CAAC9C,SAAS;YAAA;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNhC,OAAA,CAACN,UAAU;YACT+D,IAAI,eAAEzD,OAAA,CAACL,UAAU;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YACrBQ,WAAW,EAAC,KAAK;YACjBI,IAAI,EAAC,IAAI;YACTc,OAAO,EAAEA,CAAA,KAAMrC,YAAY,CAACgC,QAAQ,CAAC/B,EAAE;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA,GAZSqB,QAAQ,CAAC/B,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAahB,CACT;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAAC9B,EAAA,CA/GQD,GAAG;EAAA,QAQIV,QAAQ;AAAA;AAAAoE,EAAA,GARf1D,GAAG;AAiHZ,eAAeA,GAAG;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}